/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linter;

import java.io.File;
import java.io.FileNotFoundException;
import java.sql.SQLOutput;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.Scanner;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        lintJS("app/src/main/resources/gates.js");



    }
    public static String lintJS(String path) {

        File jsFile = new File(path);
        Scanner jsScan;

        try {
            jsScan = new Scanner(jsFile);
        } catch (FileNotFoundException exception) {
            System.out.println(exception);
            return "exception";
        }
        int counter = 0;
        int linescorrect = 0;
        ArrayList<Integer> linesWrong = new ArrayList<>();
//        iterate through the file
        while (jsScan.hasNext()) {
            String currentLine = jsScan.nextLine();
            counter++;


//        check to see if line is missing semi colon
//        check to see if line if line has semicolon or bracket
//        check to see if line is empty

            if (currentLine.endsWith(";") ||
                    currentLine.endsWith("}") ||
                    currentLine.endsWith("{") ||
                    currentLine.contains("if") ||
                    currentLine.contains("else") ||
                    currentLine.isBlank()) linescorrect++;
            else {
                String errorMsg = "Line " + String.valueOf(counter) + ": Missing semicolon.";
//                System.out.println(errorMsg);
                linesWrong.add(counter);
            }
        }
        String output = "Lines missing semicolon: ";
        for (int i = 0; i < linesWrong.size(); i++) {
            output = output.concat(String.valueOf(linesWrong.get(i))).concat(" ");
        }
        System.out.println(output);
        return output;
    }
    public static String analyzeWeather(int [][] inputArray){
        HashSet<Integer> weather = new HashSet<>();
        Integer high = 0;
        Integer low = 99;
        for (int temp [] : inputArray) {
            for (int i = 0; i < temp.length; i++) {
                weather.add(temp[i]);
                if (low < temp[i]) low = temp[i];
                if (high < temp[i]) high = temp[i];
            }
        }
        ArrayList<Integer> uniqueWeather = new ArrayList<>(weather);
        Collections.sort(uniqueWeather);
        ArrayList<Integer> missingTemps = new ArrayList<>();
        int tempLower = uniqueWeather.get(0);
        for (int tempHigher : uniqueWeather) {

            while (tempHigher-tempLower > 1){

                tempLower ++;
                missingTemps.add(tempLower);

            }
            tempLower = tempHigher;
        }
        String output = "Never saw these temperatures: ";
        for (int i = 0; i < missingTemps.size(); i++) {
            String addingTemp = String.valueOf(missingTemps.get(i)).concat(", ");

            output = output.concat(addingTemp);
        }
        System.out.println(output);
        return output;
    }
    public static String tally (ArrayList<String> inputList){

    }
}
